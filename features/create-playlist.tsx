import { useState, useRef } from 'react';
import { LinkOverlay, Button } from '@chakra-ui/react';
import { Track } from '../pages/api/spotify';
import { useSpotifyContext } from './spotify-context';

interface Props {
    userId: string | null | undefined,
    tracks: Track[] | null,
}

// TODO: rewrite this entire thing tbh :) just a hack to prove it works :)
export const CreatePlaylistButton = (props: Props) => {
  const { userId, tracks } = props;
  const [creatingPlaylist, setCreatingPlaylist] = useState<boolean>(false);
  const [playlistCreated, setPlaylistCreated] = useState<boolean>(false);
  const playlistUri = useRef<string>('');
  const { accessToken } = useSpotifyContext();

  if (!userId || !tracks) {
    return null;
  }

  const makePlaylist = async () => {
    if (!userId || !tracks) {
      return;
    }

    setCreatingPlaylist(true);
    const date = new Date(Date.now()).toLocaleString('en-US', {}).split(',')[0];
    const res = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {
      method: 'POST',
      body: JSON.stringify({
        name: `Timewarp - ${date}`,
        description: 'Timewarp autogenerated playlist',
        public: false,
      }),
      headers: {
        Authorization: `Bearer ${accessToken}`,
      },
    });

    if (!res.ok) {
      setCreatingPlaylist(false);
      alert('issue creating playlist');
      return;
    }
    const playlistJson = await res.json();
    console.log(playlistJson);
    playlistUri.current = playlistJson?.uri;
    const res2 = await fetch(`https://api.spotify.com/v1/playlists/${playlistJson.id}/tracks`, {
      method: 'POST',
      body: JSON.stringify({
        uris: tracks.map((track) => track.song.uri),
      }),
      headers: {
        Authorization: `Bearer ${accessToken}`,
      },
    });

    if (!res2.ok) {
      alert('issue adding songs to playlist');
    }
    setCreatingPlaylist(false);
    setPlaylistCreated(true);
  };

  return playlistCreated
    ? (<LinkOverlay href={playlistUri.current}><Button m="2">Open Playlist!</Button></LinkOverlay>)
    : (<Button m="2" onClick={makePlaylist} isLoading={creatingPlaylist}>Make a playlist</Button>);
};
