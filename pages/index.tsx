import { useEffect, useLayoutEffect, useRef, useState } from 'react';
import Head from 'next/head';
import {
  SpotifyUser,
  Track,
  getUserInfo,
  getTracks,
} from '../features/api/spotify';
import { useSpotifyContext } from '../features/spotify-context';
import { SplashScreen } from '../features/screens/splash';
import { TracksScreen } from '../features/screens/tracks';
import { Footer } from '../features/components/footer';

const Index = () => {
  const [loading, setLoading] = useState<boolean>(false);
  const [tracks, setTracks] = useState<Track[] | null>(null);
  const [user, setUser] = useState<SpotifyUser | null>(null);
  const tracksRef = useRef<HTMLDivElement | null>(null);
  const { accessToken } = useSpotifyContext();

  const scrollTracksIntoView = () => {
    if (tracks && !loading) {
      tracksRef.current?.scrollIntoView({
        behavior: 'smooth',
        block: 'start',
      });
    }
  };

  useEffect(() => {
    if (!accessToken) {
      return;
    }

    (async () => {
      setLoading(true);
      // TODO: error handling
      const spotifyUser = await getUserInfo(accessToken);
      const spotifyTracks = await getTracks(accessToken, 12);
      setUser(spotifyUser);
      setTracks(spotifyTracks);
      setLoading(false);
    })();
  }, [accessToken]);

  useLayoutEffect(scrollTracksIntoView, [tracks, loading]);

  return (
    <>
      <Head>
        <title>Spotify Time Warp</title>
        <meta
          name="description"
          content="Autogenerated Spotify playlists based on your listening history"
        />
      </Head>

      <SplashScreen
        loading={loading}
        user={user}
        onLoggedInClicked={scrollTracksIntoView}
      />
      <TracksScreen
        loading={loading}
        tracks={tracks}
        user={user}
        ref={tracksRef}
      />
      <Footer />
    </>
  );
};

export default Index;
